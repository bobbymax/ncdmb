<?php

namespace App\Services;

use App\Repositories\AllowanceRepository;
use App\Repositories\TripCategoryRepository;
use Illuminate\Support\Facades\DB;

class TripCategoryService extends BaseService
{
    protected AllowanceRepository $allowanceRepository;
    public function __construct(TripCategoryRepository $tripCategoryRepository, AllowanceRepository $allowanceRepository)
    {
        parent::__construct($tripCategoryRepository);
        $this->allowanceRepository = $allowanceRepository;
    }

    public function rules($action = "store"): array
    {
        return [
            'name' => 'required|string|max:255',
            'description' => 'nullable|string|max:255',
            'type' => 'required|string|in:flight,road',
            'accommodation_type' => 'required|string|in:residence,non-residence',
            'selectedAllowances' => 'required|array',
        ];
    }

    public function store(array $data)
    {
        return DB::transaction(function () use ($data) {
            $tripCategory = parent::store($data);

            if ($tripCategory && isset($data['selectedAllowances']) && is_array($data['selectedAllowances'])) {
                foreach ($data['selectedAllowances'] as $obj) {
                    $allowance = $this->allowanceRepository->find($obj['value']);

                    if ($allowance) {
                        $tripCategory->allowances()->save($allowance);
                    }
                }
            }

            return $tripCategory;
        }); // TODO: Change the autogenerated stub
    }

    public function update(int $id, array $data)
    {
        return  DB::transaction(function () use ($id, $data) {
            $tripCategory = parent::update($id, $data);

            if ($tripCategory && isset($data['selectedAllowances']) && is_array($data['selectedAllowances'])) {
                foreach ($data['selectedAllowances'] as $obj) {
                    $allowance = $this->allowanceRepository->find($obj['value']);

                    if ($allowance && !in_array($allowance->id, $tripCategory->allowances->pluck('id')->toArray())) {
                        $tripCategory->allowances()->save($allowance);
                    }
                }
            }

            return $tripCategory;
        });
    }
}
